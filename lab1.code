#include <stdlib.h>
#include <stdio.h>
#include <string.h>

int a[17][17] = { 
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } };
int a1[17][17] = { NULL }, i, k = 0, k1, k2, m, n;

void line() {  // ложные границы
	for (i = 1; i <= 17; i++) {
		a[0][i] = a[15][i];
		a[i][0] = a[i][15];
		a[16][i] = a[1][i];
		a[i][16] = a[i][1];
	}
	a[0][0] = a[15][15];
	a[16][16] = a[1][1];
	a[0][16] = a[15][1];
	a[16][0] = a[1][15];
}

void swap() { // перенос временного массива а1 в постоянный а
	for (m = 1; m < 16; m++) {
		for (n = 1; n < 16; n++) {
			a[m][n] = a1[m][n];
		}
	}
}

void check() { // проверка всего поля 3х3 на "жизнь"
	k = 0;
	for (k1 = -1; k1 <= 1; k1++) {
		for (k2 = -1; k2 <= 1; k2++) {
			if (a[m + k1][n + k2] == 1) {
				k++;
			}
		}
	}
}


int main() { // основа
	while (1) {
		for (m = 1; m < 16; m++) { // вывод массива
			for (n = 1; n < 16; n++) {
				printf("%d ", a[m][n]);
			}
			printf("\n");
		}
		line();
			for (m = 1; m < 16; m++) { 
				for (n = 1; n < 16; n++) {
					check();
					if ((k == 3) || ((k == 4) && (a[m][n] == 1))) { //условия "жизни" с учетом проверки поля 3х3
						a1[m][n] = 1;
					}
					else
						a1[m][n] = 0;
				}			
		}
		swap();
		getchar();
		system("cls");
	}
}
